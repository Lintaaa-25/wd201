<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Todo App</title>
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body data-csrf-token="<%= csrfToken %>">
  <%- include('header') %>

  <main>
    <section>
      <form action="/todos" method="POST">
        <input type="hidden" name="_csrf" value="<%= csrfToken %>" />
        <input type="text" name="title" placeholder="Enter todo title" required />
        <input type="date" name="dueDate" required />
        <button type="submit">Add Todo</button>
      </form>
    </section>

    <section id="overdue">
      <h2>Overdue</h2>
      <p id="count-overdue"><%= overdue.length %> overdue tasks</p>
      <table>
        <% overdue.forEach(todo => { %>
          <tr class="Todo-Item" id="todo-item-<%= todo.id %>">
            <td>
              <label for="todo-<%= todo.id %>">
                <input type="checkbox" id="todo-<%= todo.id %>" <%= todo.completed ? 'checked' : '' %> onchange="updateTodo(<%= todo.id %>)" />
                <%= todo.title %> - <%= todo.dueDate %>
              </label>
            </td>
            <td>
              <button onclick="deleteTodo(<%= todo.id %>)">Delete</button>
            </td>
          </tr>
        <% }) %>
      </table>
    </section>

    <section id="due-today">
      <h2>Due Today</h2>
      <p id="count-due-today"><%= dueToday.length %> tasks due today</p>
      <table>
        <% dueToday.forEach(todo => { %>
          <tr class="Todo-Item" id="todo-item-<%= todo.id %>">
            <td>
              <label for="todo-<%= todo.id %>">
                <input type="checkbox" id="todo-<%= todo.id %>" <%= todo.completed ? 'checked' : '' %> onchange="updateTodo(<%= todo.id %>)" />
                <%= todo.title %> - <%= todo.dueDate %>
              </label>
            </td>
            <td>
              <button onclick="deleteTodo(<%= todo.id %>)">Delete</button>
            </td>
          </tr>
        <% }) %>
      </table>
    </section>

    <section id="due-later">
      <h2>Due Later</h2>
      <p id="count-due-later"><%= dueLater.length %> tasks due later</p>
      <table>
        <% dueLater.forEach(todo => { %>
          <tr class="Todo-Item" id="todo-item-<%= todo.id %>">
            <td>
              <label for="todo-<%= todo.id %>">
                <input type="checkbox" id="todo-<%= todo.id %>" <%= todo.completed ? 'checked' : '' %> onchange="updateTodo(<%= todo.id %>)" />
                <%= todo.title %> - <%= todo.dueDate %>
              </label>
            </td>
            <td>
              <button onclick="deleteTodo(<%= todo.id %>)">Delete</button>
            </td>
          </tr>
        <% }) %>
      </table>
    </section>

    <section id="completed">
      <h2>Completed</h2>
      <p id="count-completed"><%= completedItems.length %> completed tasks</p>
      <table>
        <% completedItems.forEach(todo => { %>
          <tr class="Todo-Item" id="todo-item-<%= todo.id %>">
            <td>
              <label for="todo-<%= todo.id %>">
                <input type="checkbox" id="todo-<%= todo.id %>" checked onchange="updateTodo(<%= todo.id %>)" />
                <%= todo.title %> - <%= todo.dueDate %>
              </label>
            </td>
            <td>
              <button onclick="deleteTodo(<%= todo.id %>)">Delete</button>
            </td>
          </tr>
        <% }) %>
      </table>
    </section>

  </main>

  <%- include('footer') %>

  <script>
    // Function to delete a Todo item
    async function deleteTodo(id) {
      await fetch(`/todos/${id}`, {
        method: "DELETE",
        headers: {
          "X-CSRF-Token": document.body.dataset.csrfToken, // Access the token from the data attribute
        },
      });
      window.location.reload(); // Reload the page to reflect changes
    }

    async function updateTodo(id) {
      const csrfToken = document.body.dataset.csrfToken; // Get the CSRF token

      const checkbox = document.getElementById(`todo-${id}`);
      const completed = checkbox.checked;
      const todoItem = document.getElementById(`todo-item-${id}`);
      const todoLabel = todoItem.querySelector('label');
      const todoText = todoLabel.textContent;
      const dueDateMatch = todoText.match(/ - (.*)/);
      const dueDate = dueDateMatch ? dueDateMatch[1] : '';

      const endpoint = completed
        ? `/todos/${id}/markAsCompleted`
        : `/todos/${id}/markAsIncompleted`;

      try {
        const response = await fetch(endpoint, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-Token": csrfToken, // Use the retrieved token
          },
        });

        if (response.ok) {
          // Update the UI directly
          if (completed) {
            todoItem.remove();
            const completedTable = document.querySelector('#completed + table');
            const newRow = document.createElement('tr');
            newRow.classList.add('Todo-Item');
            newRow.id = `todo-item-${id}`;
            newRow.innerHTML = `
              <td>
                <label for="todo-${id}">
                  <input type="checkbox" id="todo-${id}" checked onchange="updateTodo(${id})" />
                  ${todoText}
                </label>
              </td>
              <td>
                <button onclick="deleteTodo(${id})">Delete</button>
              </td>
            `;
            completedTable.appendChild(newRow);
            document.getElementById('count-completed').textContent = `${document.querySelectorAll('#completed .Todo-Item').length} completed tasks`;

            const previousSection = todoItem.closest('section');
            if (previousSection && previousSection.id) {
              document.getElementById(`count-${previousSection.id}`).textContent = `${previousSection.querySelectorAll('.Todo-Item').length - 1} ${previousSection.id.replace('-', ' ')} tasks`;
            }

          } else {
            todoItem.remove();
            let targetTable;
            let countElementId;
            const today = new Date().toISOString().split('T')[0];

            if (dueDate < today) {
              targetTable = document.querySelector('#overdue + table');
              countElementId = 'count-overdue';
            } else if (dueDate === today) {
              targetTable = document.querySelector('#due-today + table');
              countElementId = 'count-due-today';
            } else {
              targetTable = document.querySelector('#due-later + table');
              countElementId = 'count-due-later';
            }

            const newRow = document.createElement('tr');
            newRow.classList.add('Todo-Item');
            newRow.id = `todo-item-${id}`;
            newRow.innerHTML = `
              <td>
                <label for="todo-${id}">
                  <input type="checkbox" id="todo-${id}" onchange="updateTodo(${id})" />
                  ${todoText}
                </label>
              </td>
              <td>
                <button onclick="deleteTodo(${id})">Delete</button>
              </td>
            `;
            targetTable.appendChild(newRow);
            document.getElementById(countElementId).textContent = `${targetTable.querySelectorAll('.Todo-Item').length} ${countElementId.split('-')[1]} tasks`;
            document.getElementById('count-completed').textContent = `${document.querySelectorAll('#completed .Todo-Item').length} completed tasks`;
          }
        } else {
          console.error('Failed to update todo');
          // Optionally, provide user feedback on failure
        }
      } catch (err) {
        console.error('Error updating todo:', err);
        // Optionally, provide user feedback on error
      }
    }
  </script>

</body>
</html>
